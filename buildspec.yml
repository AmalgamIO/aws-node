version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 18.x
    commands:
      - npm install
      - pip install --user aws-sam-cli  # Ensure AWS SAM is installed
      - pip install --user awscli jq  # Install AWS CLI and jq for JSON parsing

  build:
    commands:
      - echo "Building Lambda function..."
      - npm run build --if-present
      - echo "Packaging Lambda function..."
      - cd dist
      - zip -r lambda.zip .
      - cd ..
      - echo "Running SAM package to generate packaged template..."
      - sam package --region us-west-2 --s3-prefix lambdas --template-file template.yaml --s3-bucket my-lambda-store-for-pipeline --use-json > packaged.json

      - echo "Extracting CodeUri from packaged.json..."
      - CODE_URI=$(jq -r '.Resources.MyLambdaFunction.Properties.CodeUri' packaged.json)

      - echo "CodeUri found: $CODE_URI"

      - echo "Retrieving the latest Lambda function version..."
      - CURRENT_VERSION=$(aws lambda list-versions-by-function --function-name MyLambdaFunction --query 'Versions[-2].Version' --output text)
      - TARGET_VERSION=$(aws lambda list-versions-by-function --function-name MyLambdaFunction --query 'Versions[-1].Version' --output text)

      - echo "Current Version= $CURRENT_VERSION, Target Version = $TARGET_VERSION"

      - echo "Generating dynamic appspec.yml for CodeDeploy..."
      - |
        cat <<EOT > appspec.yml
        version: 0.0
        Resources:
          - MyLambdaFunction:
              Type: AWS::Lambda::Function
              Properties:
                Name: MyLambdaFunction
                Alias: live
                CurrentVersion: $CURRENT_VERSION
                TargetVersion: $TARGET_VERSION
                CodeUri: "$CODE_URI"
        EOT

artifacts:
  files:
    - packaged.json
    - appspec.yml  # ✅ CodeDeploy requires this
    - dist/lambda.zip  # ✅ lambda.zip contains function code only
  discard-paths: yes
